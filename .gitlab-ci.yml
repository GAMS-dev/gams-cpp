stages:
  - images
  - fetch  # fetching on wei is complicated. Hence do that from a leg container beforehand
  - install-gams # fetch from builds.gams.com or web, all platforms
  - build
  - test
  - deploy # only leg, to github as new release

variables:
  MACHINES_CONTAINER_REG:
      value: registry.gams.com/devel/machines
      description: "URL to the container registry of the machines repository"
  PF_CUSTOM_BRANCH:
      value: $CUSTOM_BRANCH
      description: "Name of custom branch or 0 if published distribution with version as specified should be taken"
  PF_BUILDS_WWW_PATH:
      value: $BUILDS_WWW_PATH
      description: "URL path prefix for builds server"
  PF_BUILDS_SSH_PORT:
      value: $BUILDS_SSH_PORT
      description: "Port used for SSH connection to builds server"
  PF_BUILDS_SSH_SERVER:
      value: $BUILDS_SSH_SERVER
      description: "URL of the build server"
  PF_BUILDS_SSH_USER:
      value: $BUILDS_SSH_USER
      description: "Username used for SSH connection to builds server"
  PF_GAMS_LICENSE:
      value: $GAMS_LICENSE
      description: "GAMS license string used for testing"

build-image-leg:
    stage: images
    tags:
        - linux
    image:
        name: docker:20.10
    services:
        - docker:20.10-dind
    variables:
        DOCKER_TLS_CERTDIR: "/certs"
    before_script:
        - mkdir -p $HOME/.docker
        - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    script:
        - docker build -t linux/builder-gamscpp docker/leg
        - docker tag linux/builder-gamscpp registry.gams.com/devel/cppmex/linux/builder-gamscpp:latest
        - docker push registry.gams.com/devel/cppmex/linux/builder-gamscpp:latest
    when: manual

include: ['ci/.gitlab-ci-fetch.yml',
          'ci/.gitlab-ci-install-gams.yml',
          'ci/.gitlab-ci-build.yml',
          'ci/.gitlab-ci-test.yml',
          'ci/.gitlab-ci-deploy.yml']
