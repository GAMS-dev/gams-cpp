set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

add_definitions(-D_CRT_SECURE_NO_WARNINGS)
if("$ENV{GAMS_BUILD}" STREQUAL "")
    include_directories("${CMAKE_CURRENT_SOURCE_DIR}/../../C++/api"
                        "${GAMSPATH}/apifiles/C/api"
                        "${gtest_SOURCE_DIR}/include")
    if(WIN32)
        set(VSVERSION "vs2019" CACHE STRING "Visual Studio version")
        link_directories("${CMAKE_BINARY_DIR}/lib")
    else()
        link_directories("${CMAKE_BINARY_DIR}/lib")
    endif()
else()
    set(BASEPATH "${GAMSPATH}/apiexamples")
    include_directories("${BASEPATH}/C++/api"
                        "${BASEPATH}/../gclib"
                        "${gtest_SOURCE_DIR}/include")
    if(WIN32)
        set(VSVERSION "vs2019" CACHE STRING "Visual Studio version")
        link_directories("${BASEPATH}/C++/lib/${VSVERSION}")
    else()
        add_link_options("-Wl,-rpath,$ENV{BTREE}/gmszlib/leg")
        link_directories("${BASEPATH}/C++/lib")
    endif()
endif()

if(UNIX) # Apple or Linux
    link_libraries(dl)
    if(NOT APPLE)
        link_libraries(stdc++fs pthread)
    endif()
    if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 8)
            set(CMAKE_C_COMPILER "gcc-8")
            set(CMAKE_CXX_COMPILER "g++-8")
        endif()
    endif()
endif()
