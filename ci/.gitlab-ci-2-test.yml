test-leg:
  stage: test
  when: on_success
  tags: [linux]
  image:
    name: $GAMS_CONTAINER_REGISTRY/qt-machines/leg/builder-qt6:latest
    entrypoint: [""]   # prevent startup.sh
  needs: [fetch-prerequisites,build-leg]
  script:
    - GAMS_PATH=/cache/gams-installs/`python3 ci/fetch_gams.py version`
    - echo $PF_GAMS_LICENSE > $GAMS_PATH/gamslice.txt
    - cd build
    - PATH=$GAMS_PATH:$PATH LD_LIBRARY_PATH="$GAMS_PATH" GMSPYTHONLIB="$GAMS_PATH/GMSPython/lib/libpython3.8.so" gams
    - PATH=$GAMS_PATH:$PATH LD_LIBRARY_PATH="$GAMS_PATH" GMSPYTHONLIB="$GAMS_PATH/GMSPython/lib/libpython3.8.so" ctest --output-on-failure --output-junit leg-results.xml
    - cat Testing/Temporary/LastTest.log
  artifacts:
    name: unittest-results-leg
    paths: [build/Testing/Temporary/LastTest.log,build/leg-results.xml]
    reports:
      junit: build/leg-results.xml

test-deg:
  stage: test
  when: on_success
  tags: [macos]
  needs: [fetch-prerequisites,build-deg]
  script:
    - GAMS_PATH=$HOME/cache/gams-installs/`python3 ci/fetch_gams.py version`
    - echo $PF_GAMS_LICENSE > $GAMS_PATH/gamslice.txt
    - cd build
    - PATH=$GAMS_PATH:$PATH DYLD_LIBRARY_PATH=$(pwd)/lib:$GAMS_PATH GMSPYTHONLIB=$GAMS_PATH/GMSPython/lib/libpython3.8.dylib gams
    - PATH=$GAMS_PATH:$PATH DYLD_LIBRARY_PATH=$(pwd)/lib:$GAMS_PATH GMSPYTHONLIB=$GAMS_PATH/GMSPython/lib/libpython3.8.dylib ctest --output-on-failure --output-junit deg-results.xml
    - cat Testing/Temporary/LastTest.log
  artifacts:
    name: unittest-results-deg
    paths:
      - build/deg-results.xml
      - build/Testing/Temporary/LastTest.log
    reports:
      junit: build/deg-results.xml

test-dac:
  stage: test
  when: on_success
  tags: [macos-arm64]
  needs: [fetch-prerequisites,build-dac]
  script:
    - GAMS_PATH=$HOME/cache/gams-installs/`python3 ci/fetch_gams.py version`
    - echo $PF_GAMS_LICENSE > $GAMS_PATH/gamslice.txt
    - cd build
    - PATH=$GAMS_PATH:$PATH DYLD_LIBRARY_PATH=$(pwd)/lib:$GAMS_PATH GMSPYTHONLIB=$GAMS_PATH/GMSPython/lib/libpython3.8.dylib gams
    - PATH=$GAMS_PATH:$PATH DYLD_LIBRARY_PATH=$(pwd)/lib:$GAMS_PATH GMSPYTHONLIB=$GAMS_PATH/GMSPython/lib/libpython3.8.dylib ctest --output-on-failure --output-junit deg-results.xml
    - cat Testing/Temporary/LastTest.log
  artifacts:
    name: unittest-results-dac
    paths:
      - build/deg-results.xml
      - build/Testing/Temporary/LastTest.log
    reports:
      junit: build/deg-results.xml

test-wei:
  stage: test
  when: on_success
  tags: [windows]
  image:
    name: $GAMS_CONTAINER_REGISTRY/machines/wei/builder-full:latest
  needs: [install-gamsdist-wei,build-wei]
  script:
    - $gmsdirname = Get-Content mygmsdir.tmp -Raw
    - $GAMS_PATH = "C:\Cache\gams-installs\$gmsdirname"
    - Out-File -FilePath $GAMS_PATH\gamslice.txt -InputObject $PF_GAMS_LICENSE -Encoding ASCII
    - $env:Path = "$GAMS_PATH;$GAMS_PATH\gbin;" + $env:Path
    - $env:GAMSDIR = "$GAMS_PATH;$GAMS_PATH\gbin"
    - findthisgams -q
    - cd build
    - cp bin\Release\gamscpp.dll $GAMS_PATH
    - cp bin\Release\gtest_main.dll $GAMS_PATH
    - cp bin\Release\gtest.dll $GAMS_PATH
    - gams
    - ctest -V --output-on-failure --output-junit wei-results.xml > ctestlog.txt
    - cat Testing/Temporary/LastTest.log
  artifacts:
    name: unittest-results-wei
    paths:
      - build/ctestlog.txt
      - build/wei-results.xml
      - build/Testing/Temporary/LastTest.log
    reports:
      junit: build/wei-results.xml
